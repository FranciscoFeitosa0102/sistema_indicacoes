{
  "name": "JoãoUberlandia",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const data = new Date();\nconst hora = data.getHours();\n\nlet saudacao = hora >= 5 && hora < 12 ? \"Bom dia\" : hora >= 12 && hora < 18 ? \"Boa tarde\" : \"Boa noite\";\n\nconst mensagens = [\n  \"Olá! Tudo bem? Seu número ficou salvo aqui para que eu pudesse entrar em contato. Você pode falar agora?\",\n  \"Oi! Tudo certo? Seu número estava salvo aqui, então resolvi te chamar. Consegue falar um minutinho?\",\n  \"Olá! Vi que seu contato estava salvo, posso falar com você agora?\",\n  \"Oi! Espero que esteja bem. Seu número ficou salvo aqui, então aproveitei para te chamar. Podemos conversar um pouco agora?\",\n  \"Oi, tudo bom? Salvei seu número e queria falar rapidinho com você. Tem um tempinho agora?\",\n  \"Olá! Encontrei seu número aqui nos meus contatos e resolvi te chamar. Podemos conversar agora?\",\n  \"Oi, tudo bem? Seu número estava salvo aqui, e queria saber se podemos conversar rapidinho.\",\n  \"Ei! Vi que seu contato estava aqui na minha lista. Consegue falar um pouquinho agora?\",\n  \"Oi! Achei seu número salvo aqui e resolvi te dar um oi. Podemos conversar um minuto?\",\n  \"Olá! Seu número estava salvo aqui comigo. Tem um tempinho para falar?\",\n  \"Oi, como vai? Vi seu contato salvo e resolvi te mandar essa mensagem. Pode falar agora?\",\n  \"Ei, tudo certo? Seu número ficou salvo aqui, e queria saber se podemos conversar um pouquinho.\",\n  \"Oi! Tudo bem? Vi seu contato aqui e pensei em te mandar um oi. Podemos conversar?\",\n  \"Olá! Seu número estava salvo aqui, e eu queria saber se você pode falar agora.\",\n  \"Oi, tudo tranquilo? Salvei seu número aqui e queria bater um papo rápido. Pode ser?\",\n  \"Olá! Seu contato estava salvo aqui comigo. Podemos conversar rapidinho?\",\n  \"Oi, tudo bem? Achei seu número aqui e pensei em entrar em contato. Tem um momento?\",\n  \"Oi! Seu número estava salvo e resolvi te dar um oi. Consegue falar um minutinho?\",\n  \"Ei, tudo certo? Vi seu contato aqui e queria saber se podemos conversar. Pode falar agora?\",\n  \"Oi! Achei seu número aqui e resolvi te chamar. Tem um tempinho pra conversar?\",\n  \"Olá! Vi seu número salvo e pensei em te chamar. Pode conversar agora?\",\n  \"Oi, como vai? Seu contato estava salvo aqui, podemos conversar rapidinho?\",\n  \"Oi! Vi seu número aqui nos contatos e queria saber se tem um minuto pra conversar.\",\n  \"Olá! Encontrei seu número salvo e pensei em te chamar. Podemos falar um pouco?\",\n  \"Oi, tudo certo? Seu contato ficou salvo aqui e queria saber se pode conversar agora.\",\n  \"Oi! Seu número estava salvo e pensei em te mandar essa mensagem. Podemos conversar?\",\n  \"Olá! Achei seu contato aqui e queria saber se tem um tempinho pra conversar.\",\n  \"Oi! Seu número ficou salvo aqui, e queria saber se podemos falar um pouco agora.\",\n  \"Ei! Vi seu número aqui na minha lista e resolvi te chamar. Consegue falar agora?\",\n  \"Oi! Encontrei seu número salvo aqui e pensei em te mandar um oi. Podemos conversar?\",\n  \"Olá! Tudo bem? Achei seu contato aqui e resolvi entrar em contato. Pode falar agora?\",\n  \"Oi! Seu número estava aqui na minha lista, e resolvi mandar essa mensagem. Podemos conversar?\",\n  \"Oi, tudo certo? Seu número ficou salvo e pensei em te chamar. Consegue conversar agora?\",\n  \"Olá! Vi seu número aqui nos meus contatos e resolvi te mandar essa mensagem. Pode falar agora?\",\n  \"Oi! Vi seu contato salvo aqui e pensei em te chamar. Podemos conversar um pouquinho?\"\n];\n\nconst mensagemAleatoria = mensagens[Math.floor(Math.random() * mensagens.length)];\n\nreturn [{ json: { ...items[0].json, mensagem: mensagemAleatoria } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        -280
      ],
      "id": "79985d46-5b01-46fd-9364-09ad8d7f4f7c",
      "name": "Code19"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Primeiro2').item.json.Minute }}",
                    "rightValue": "28",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "8e19f18f-f773-469a-98af-73cffc2bb769"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Dia"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "63823180-17d8-425c-8cd6-b97527b2b94f",
                    "leftValue": "={{ $('Primeiro2').item.json.Minute }}",
                    "rightValue": "53",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Tarde"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ad7ca10b-6f39-487c-818a-5b5949127540",
                    "leftValue": "={{ $('Primeiro2').item.json.Hour }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Noite"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -940,
        -140
      ],
      "id": "b766dc68-873b-4e36-81da-dccef06ec0da",
      "name": "Switch6"
    },
    {
      "parameters": {
        "jsCode": "const data = new Date();\nconst hora = data.getHours();\n\nlet saudacao = hora >= 5 && hora < 12 ? \"Bom dia\" : hora >= 12 && hora < 18 ? \"Boa tarde\" : \"Boa noite\";\n\nconst mensagens = [\n  `${saudacao}! Sou eu de novo! Não quero ser invasivo, mas meu trabalho é apresentar os benefícios do Cartão de TODOS para mais pessoas. Acredito que ele pode ser útil para você. Posso te explicar rapidinho como funciona?`,\n  `${saudacao}! Passando aqui mais uma vez! Quero te mostrar como você pode marcar consultas médicas por apenas R$40,00. Quer saber como?`,\n  `${saudacao}! Desculpa insistir, mas preciso te explicar rapidinho sobre o Cartão de TODOS. Tenho certeza de que pode ser algo vantajoso para você e sua família. Podemos conversar?`,\n  `${saudacao}! Sei que sua rotina é corrida, mas prometo ser breve. Quero te mostrar como você pode economizar em consultas e exames médicos. Posso te explicar?`,\n  `${saudacao}! Voltei para te contar como o Cartão de TODOS pode te ajudar a cuidar da saúde gastando pouco. Consegue me dar um minutinho?`,\n  `${saudacao}! Não quero incomodar, mas preciso te explicar um pouco mais sobre meu trabalho. O Cartão de TODOS pode fazer diferença para você e sua família. Me dá uma chance?`,\n  `${saudacao}! Sei que talvez você esteja ocupado, mas queria só um momento para te mostrar uma solução incrível para reduzir seus gastos com saúde. Podemos conversar?`,\n  `${saudacao}! Voltei para falar com você. Quero te explicar como é possível ter acesso a consultas médicas acessíveis sempre que precisar. Pode me dar um tempinho?`,\n  `${saudacao}! Passando aqui mais uma vez para te contar como o Cartão de TODOS pode facilitar seu acesso a saúde de qualidade. Podemos conversar agora?`,\n  `${saudacao}! Eu realmente acredito que o Cartão de TODOS pode te ajudar. Por isso, queria insistir só um pouquinho para te explicar como funciona. Posso falar com você?`,\n  `${saudacao}! Sei que pode não ser o melhor momento, mas quero muito te mostrar como o Cartão de TODOS pode ser útil para você. Posso te explicar rapidamente?`,\n  `${saudacao}! Quero te ajudar a cuidar da sua saúde sem pesar no bolso. O Cartão de TODOS é uma ótima solução para isso. Tem um minutinho para ouvir como funciona?`,\n  `${saudacao}! Sei que pode estar ocupado, mas queria te explicar um pouco sobre o Cartão de TODOS. Ele pode fazer sentido para você! Podemos conversar rapidinho?`,\n  `${saudacao}! Voltei porque realmente acredito que o Cartão de TODOS pode ser útil para você. Se puder, me dá um tempinho para te explicar como ele funciona?`,\n  `${saudacao}! Meu trabalho depende de apresentar os benefícios do Cartão de TODOS para mais pessoas, e acho que pode ser interessante para você. Consegue falar um minutinho?`,\n  `${saudacao}! Estou aqui novamente porque quero garantir que você conheça todos os benefícios do Cartão de TODOS. Pode me dar alguns minutos para te explicar?`\n];\n\nconst mensagemAleatoria = mensagens[Math.floor(Math.random() * mensagens.length)];\n\nreturn [{ json: { ...items[0].json, mensagem: mensagemAleatoria } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        -140
      ],
      "id": "a3f5a3da-4e89-48e2-99b9-25c5b1eab63a",
      "name": "Code20"
    },
    {
      "parameters": {
        "jsCode": "const data = new Date();\nconst hora = data.getHours();\n\nlet saudacao = hora >= 5 && hora < 12 ? \"Bom dia\" : hora >= 12 && hora < 18 ? \"Boa tarde\" : \"Boa noite\";\n\nconst mensagens = [\n  \"Oi! Ainda estou por aqui porque acredito que minha solução pode realmente fazer diferença para você. Posso te explicar rapidinho?\",\n  \"Passei o dia pensando em como posso te ajudar. Que tal me dar 5 minutos para te contar algo que pode melhorar sua vida?\",\n  \"Oi! Prometo ser breve! Posso te mostrar como meu produto pode facilitar o seu dia a dia?\",\n  \"Ainda estou por aqui porque sei que essa oportunidade pode ser valiosa para você. Posso te contar mais?\",\n  \"Oi! Sei que sua rotina é corrida, mas só preciso de um tempinho para te apresentar algo que pode fazer a diferença. Podemos conversar?\",\n  \"Não quero te incomodar, mas acredito que você pode se beneficiar muito com o que tenho a dizer. Me dá 2 minutinhos?\",\n  \"Percebi que não conseguimos falar ainda. Tudo bem, mas saiba que estarei por aqui sempre que precisar.\",\n  \"Oi! Se ainda estiver na dúvida, me dá a chance de te mostrar como isso pode ser útil para você. Que tal uma conversa rápida?\",\n  \"Ei! Sei que pode parecer insistência, mas é só porque acredito de verdade que isso pode te ajudar. Posso te mostrar como?\",\n  \"Oi! Antes de eu ir embora, queria saber se posso te explicar rapidinho como isso pode fazer a diferença na sua vida.\",\n  \"Ainda estou aqui porque realmente acredito que posso te ajudar. Só preciso de um tempinho seu. Podemos falar?\",\n  \"Quero me despedir, mas antes, se ainda houver uma chance, posso te mostrar algo que pode ser útil para você?\",\n  \"Oi! Eu entendo que pode não ser o momento certo, mas se mudar de ideia, saiba que estou por aqui para te ajudar.\",\n  \"Oi! Prometo que essa é minha última tentativa por hoje. Que tal me dar 3 minutos para te explicar algo que pode valer a pena?\",\n  \"Oi, percebi que ainda não conseguimos conversar. Vou respeitar isso, mas se precisar, é só me chamar.\"\n];\n\nconst mensagemAleatoria = mensagens[Math.floor(Math.random() * mensagens.length)];\n\nreturn [{ json: { ...items[0].json, mensagem: mensagemAleatoria } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        0
      ],
      "id": "83b9d681-62a3-4cef-a083-c60971d589c6",
      "name": "Code21"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1100,
        -140
      ],
      "id": "ebad4f70-1401-49d3-a2b8-9a5d94e93bde",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "amount": "={{ $json.waitTime }}\n\n"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -320,
        -140
      ],
      "id": "6bdaf4ce-30bc-4f7e-b14b-043ef3b19cd5",
      "name": "Wait",
      "webhookId": "8174026c-99b3-4814-ab4e-19d9528ec18a"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n    item.json.waitTime = Math.floor(Math.random() * (30 - 10 + 1)) + 10;\n    return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        -140
      ],
      "id": "368cddfa-6c2e-4d2a-b201-d6e0518458be",
      "name": "Code"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "25 7 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "53 11 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "10 18 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2080,
        -140
      ],
      "id": "6e90311b-784e-4772-bbe1-2b86bae9c2a6",
      "name": "Primeiro2"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clientes_disparos_Uberlandia",
          "mode": "list",
          "cachedResultName": "clientes_disparos_Uberlandia"
        },
        "limit": 15000,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1920,
        -140
      ],
      "id": "dce4702c-c94e-41dd-9780-c98210239212",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "azT8r3KsLvbBEiym",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5abbd321-0c08-4d4a-8c9a-fd207b54fbc2",
              "leftValue": "={{ $json.nome_vendedor }}",
              "rightValue": "=Joao",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1460,
        -140
      ],
      "id": "bb3bf40c-a74b-4048-9913-f55b599ea4ac",
      "name": "Se é o vendendor"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "90f42328-b6d9-47bd-b4fc-fa4dc0228af1",
              "leftValue": "={{ $json.responde }}",
              "rightValue": "Sim",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1280,
        -140
      ],
      "id": "c89f8f14-eeea-48e9-add5-79e2d6346d44",
      "name": "Respondeu"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c951cd27-10e5-41f8-9140-d181b2aa89ba",
              "leftValue": "={{ $json.data_formatada }}",
              "rightValue": "={{ new Date().toISOString().split('T')[0] }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1620,
        -140
      ],
      "id": "409f9ad9-6f46-4761-96d7-ec2aaaa3cfa6",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Pega todos os itens de entrada\nconst items = $input.all();\n\n// Processa cada item\nconst processedItems = items.map(item => {\n  const dataISO = item.json.data;\n  const dataFormatada = dataISO.split('T')[0];\n  const hoje = new Date().toISOString().split('T')[0];\n  const ehHoje = dataFormatada === hoje;\n\n  return {\n    json: {\n      ...item.json,\n      data_formatada: dataFormatada,\n      eh_data_de_hoje: ehHoje\n    }\n  };\n});\n\n// Retorna todos os itens processados\nreturn processedItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1780,
        -140
      ],
      "id": "b549960e-9916-403c-be53-b7b2111d0bb9",
      "name": "Code1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evo.leadscdt.com.br/message/sendText/JoaoUberlandia",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=+{{ $json.numero_cliente }}"
            },
            {
              "name": "text",
              "value": "={{ $json.mensagem }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "neverError": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        -140
      ],
      "id": "2ec4c5c7-deb7-4766-8ccc-15a52e8253e5",
      "name": "Joao",
      "credentials": {
        "httpHeaderAuth": {
          "id": "6ueMOwMh9gF53eY3",
          "name": "JoaoUberlandia"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Code19": {
      "main": [
        [
          {
            "node": "Joao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code20": {
      "main": [
        [
          {
            "node": "Joao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code21": {
      "main": [
        [
          {
            "node": "Joao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Primeiro2": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se é o vendendor": {
      "main": [
        [
          {
            "node": "Respondeu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Se é o vendendor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respondeu": {
      "main": [
        [],
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Joao": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7d4f6a5c-6f8d-4c06-bd27-628c41d6b57c",
  "meta": {
    "instanceId": "2ef4fa39eab589cfa0066298da2ddbb1750b6bd8f1c79f62930ab9f8ab950120"
  },
  "id": "WHTR7fZl507QIREn",
  "tags": []
}