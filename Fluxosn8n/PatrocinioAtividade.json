{
  "name": "PatrocinioAtividade",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "01 11 * * 1-6"
            },
            {
              "field": "cronExpression",
              "expression": "30 15 * * 1-5"
            },
            {
              "field": "cronExpression",
              "expression": "40 17 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -180,
        0
      ],
      "id": "bcbf4e08-5f11-4768-9162-f9cc58f38bdb",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1148686127,
          "mode": "list",
          "cachedResultName": "Liga√ß√µes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1148686127"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        20,
        0
      ],
      "id": "89d7e48b-6cc0-4880-bc9d-ca8cb86b44bb",
      "name": "Liga√ß√£o",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1527354457,
          "mode": "list",
          "cachedResultName": "Prospec√ß√£o",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1527354457"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        -140
      ],
      "id": "2efd2b5d-eb3f-4cc0-9b0a-4e9d1c29128b",
      "name": "Prospec√ß√£o",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1002244488,
          "mode": "list",
          "cachedResultName": "Negocia√ß√£o",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1002244488"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        760,
        -160
      ],
      "id": "533465b4-cb5a-4def-96bc-b94d9982ef38",
      "name": "Negocia√ß√£o",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Liga√ß√µes\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  // Pula a linha de cabe√ßalho\n  if (row.Liga√ß√µes.toLowerCase().includes('vendedor')) continue;\n\n  const nome = row.Liga√ß√µes;\n  const col2 = row.col_2 ?? 0;\n  const col3 = row.col_3 ?? 0;\n  const col4 = row.col_4 ?? 0;\n\n  const texto = `${nome} 11:00 quantidade de ${col2} ${col2 == 1 ? 'liga√ß√£o' : 'liga√ß√µes'}; 15:00 quantidade de ${col3} ${col3 == 1 ? 'liga√ß√£o' : 'liga√ß√µes'}; 17:30 quantidade de ${col4} ${col4 == 1 ? 'liga√ß√£o' : 'liga√ß√µes'}.`;\n  \n  output += texto + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Liga√ß√µes',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        20
      ],
      "id": "097e1820-b84f-408d-befe-f64038db55a1",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Prospec√ß√£o\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  if (row.Prospec√ß√£o?.toLowerCase().includes('vendedor')) continue;\n\n  const nome = row.Prospec√ß√£o;\n  const col2 = row.col_2 ?? 0;\n  const col3 = row.col_3 ?? 0;\n  const col4 = row.col_4 ?? 0;\n\n  const texto = `${nome} 11:00 quantidade de ${col2} ${col2 == 1 ? 'prospec√ß√£o' : 'prospec√ß√µes'}; 15:00 quantidade de ${col3} ${col3 == 1 ? 'prospec√ß√£o' : 'prospec√ß√µes'}; 17:30 quantidade de ${col4} ${col4 == 1 ? 'prospec√ß√£o' : 'prospec√ß√µes'}.`;\n\n  output += texto + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Prospec√ß√£o',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        -60
      ],
      "id": "99bd2e64-5d76-427d-9fc8-6b1d022a2ad1",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Negocia√ß√£o\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  // Corrigindo o nome da chave com espa√ßo no final\n  const nome = (row[\"Negocia√ß√£o \"] || '').trim();\n\n  // Ignora a linha de cabe√ßalho\n  if (nome.toLowerCase() === 'vendedor') continue;\n\n  // Garante que os valores s√£o n√∫meros\n  const col2 = parseInt(row.col_2 ?? 0);\n  const col3 = parseInt(row.col_3 ?? 0);\n  const col4 = parseInt(row.col_4 ?? 0);\n\n  const frase = `${nome} 11:00 quantidade de ${col2} ${col2 === 1 ? 'negocia√ß√£o' : 'negocia√ß√µes'}; ` +\n                `15:00 quantidade de ${col3} ${col3 === 1 ? 'negocia√ß√£o' : 'negocia√ß√µes'}; ` +\n                `17:30 quantidade de ${col4} ${col4 === 1 ? 'negocia√ß√£o' : 'negocia√ß√µes'}.`;\n\n  output += frase + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Negocia√ß√£o',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        -60
      ],
      "id": "16a99ecd-c851-45c2-88cc-f5bdf3a2bb57",
      "name": "Code2"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1060,
        140
      ],
      "id": "d82d6031-b090-4c05-bd4f-c856b8dd61a9",
      "name": "Merge"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.dados }}",
        "options": {
          "systemMessage": "Crie apenas uma √∫nica mensagem como segue abaixo\n\n√â para criar sempre de todos os vendedores e n√£o apenas os 3 primeiros. \n\n√© para hackear mediante a quantidade de prospec√ß√µes\nQuem mais tiver prospec√ß√µes ser√£o os primeiros.\n\nExemplo:\nüì£*Segue ranking de atividade*üöÄ\n\n1¬∞ü•á *Henrique*: 3 Liga√ß√µes 10 prospec√ß√µes e 4 negocia√ß√£o. \n2¬∞ü•à *Natalia*: 7 Liga√ß√µes 9 prospec√ß√µes e 2  negocia√ß√µes \n3¬∞ü•â *Stefani*: 6 Liga√ß√µes 7 prospec√ß√µes e 1 Negocia√ß√£o \n4¬∞ *Talita*: 6 Liga√ß√µes 5 prospec√ß√µes e 1 Negocia√ß√£o\nE assim por diante.\n4¬∞ *Gabriela*: 4 Liga√ß√µes 2 prospec√ß√µes e 1 Negocia√ß√£o\nE assim por diante...\n\nDeixa um mensagem curta dizendo sempre o porque devemos ter volume de atividade em vendas, algo sobre persist√™ncia, consist√™ncia, motiva√ß√£o e objetivo. Utilize emoges porem poucos. \n\nSe n√£o conter algum n√∫mero √© porque n√£o teve preenchimento ou porque n√£o ouve atividade. Fa√ßa tamb√©m um curto coment√°rio para n√£o deixar de preencher e sua import√¢ncia ou se ainda n√£o fez a atividade esta perdendo tempo. Quando estiver 0 √© porque ouve o preenchimento mas n√£o ouve atividades. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1520,
        -60
      ],
      "id": "fb864cdf-6b57-4b97-a002-b0da6c493804",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1540,
        180
      ],
      "id": "e7f2f09d-2d77-48ea-9794-e1062e60ad97",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "B9GolNdmVgPzDWz2",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Fun√ß√£o para extrair quantidade de uma frase como \"15:00 quantidade de 4 liga√ß√µes\"\nfunction extrairQuantidade(texto) {\n  const match = texto.match(/quantidade de\\s*(\\d+)/);\n  return match ? parseInt(match[1]) : 0;\n}\n\n// Objeto final com os dados unificados\nconst consolidado = {};\n\n// Iterar sobre cada item (atividade)\nfor (const item of items) {\n  const atividade = item.json.atividade.toLowerCase();\n  const linhas = item.json.dados.split('\\n').slice(2); // ignora cabe√ßalhos\n\n  for (const linha of linhas) {\n    if (!linha.trim()) continue;\n\n    const partes = linha.split(/(?=\\d{1,2}:\\d{2}\\s+quantidade)/g);\n    const nome = partes[0].split(' ')[0];\n\n    if (!consolidado[nome]) {\n      consolidado[nome] = {\n        nome,\n        ligacoes: 0,\n        prospeccoes: 0,\n        negociacoes: 0\n      };\n    }\n\n    for (const parte of partes) {\n      const qtd = extrairQuantidade(parte);\n      if (atividade.includes(\"negocia√ß√£o\")) {\n        consolidado[nome].negociacoes += qtd;\n      } else if (atividade.includes(\"prospec\")) {\n        consolidado[nome].prospeccoes += qtd;\n      } else if (atividade.includes(\"liga√ß√£o\") || atividade.includes(\"liga√ß√µes\")) {\n        consolidado[nome].ligacoes += qtd;\n      }\n    }\n  }\n}\n\n// Retornar em um √∫nico item com todos os dados juntos\nreturn [\n  {\n    json: {\n      dados: Object.values(consolidado)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        100
      ],
      "id": "ddfe5938-774c-456e-aa82-9e0c8793f9d2",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evo.leadscdt.com.br/message/sendText/Francisco",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=120363068420701463@g.us"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "neverError": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1980,
        -60
      ],
      "id": "da47fd20-679d-49e5-a829-7b7f1f878a0b",
      "name": "Karol",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ojPLr1ImI4RqyPlx",
          "name": "PatrocinioFrancisco"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Liga√ß√£o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Liga√ß√£o": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prospec√ß√£o": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          },
          {
            "node": "Prospec√ß√£o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Negocia√ß√£o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Negocia√ß√£o": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Karol",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c2888d19-c1bf-4474-93ee-38f39b6eec7f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f763e8fdca77702870cf690f15089984a3c3202426ce948f8e26feb070a0b4a8"
  },
  "id": "8WDbILsuD0N4w5WD",
  "tags": []
}