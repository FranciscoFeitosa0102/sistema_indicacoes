{
  "name": "PatrocinioAtividadesFechamentodia",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "55 17 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -180,
        0
      ],
      "id": "7a392cc3-dd55-4b64-a159-4bbe7396efdb",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1148686127,
          "mode": "list",
          "cachedResultName": "Ligações",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1148686127"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        20,
        0
      ],
      "id": "905f7009-e60e-4cee-ad48-12d7a54b6122",
      "name": "Ligação",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1527354457,
          "mode": "list",
          "cachedResultName": "Prospecção",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1527354457"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        -140
      ],
      "id": "ab002ecd-83e7-4d36-ab8c-a590a5f2fca0",
      "name": "Prospecção",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A",
          "mode": "list",
          "cachedResultName": "Comercial VENDAS PTC",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1002244488,
          "mode": "list",
          "cachedResultName": "Negociação",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Xa8-CyH33wny_5IIQk1ONfOCXIF4w24FUenqIQOJ52A/edit#gid=1002244488"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        760,
        -160
      ],
      "id": "19bb3405-11c9-49d9-9315-f51de8b5a229",
      "name": "Negociação",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "0d7LqZ2rMRr5Z1EJ",
          "name": "Acesso a planilha do sheetes"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Ligações\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  // Pula a linha de cabeçalho\n  if (row.Ligações.toLowerCase().includes('vendedor')) continue;\n\n  const nome = row.Ligações;\n  const col2 = row.col_2 ?? 0;\n  const col3 = row.col_3 ?? 0;\n  const col4 = row.col_4 ?? 0;\n\n  const texto = `${nome} 11:00 quantidade de ${col2} ${col2 == 1 ? 'ligação' : 'ligações'}; 15:00 quantidade de ${col3} ${col3 == 1 ? 'ligação' : 'ligações'}; 17:30 quantidade de ${col4} ${col4 == 1 ? 'ligação' : 'ligações'}.`;\n  \n  output += texto + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Ligações',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        20
      ],
      "id": "e5f9ec0c-fa2f-49db-8e17-a7550d54a7c3",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Prospecção\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  if (row.Prospecção?.toLowerCase().includes('vendedor')) continue;\n\n  const nome = row.Prospecção;\n  const col2 = row.col_2 ?? 0;\n  const col3 = row.col_3 ?? 0;\n  const col4 = row.col_4 ?? 0;\n\n  const texto = `${nome} 11:00 quantidade de ${col2} ${col2 == 1 ? 'prospecção' : 'prospecções'}; 15:00 quantidade de ${col3} ${col3 == 1 ? 'prospecção' : 'prospecções'}; 17:30 quantidade de ${col4} ${col4 == 1 ? 'prospecção' : 'prospecções'}.`;\n\n  output += texto + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Prospecção',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        -60
      ],
      "id": "a1b40b15-cc2c-4f4a-be30-322e34655752",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet output = 'Negociação\\nVendedor\\n';\n\nfor (const item of items) {\n  const row = item.json;\n\n  // Corrigindo o nome da chave com espaço no final\n  const nome = (row[\"Negociação \"] || '').trim();\n\n  // Ignora a linha de cabeçalho\n  if (nome.toLowerCase() === 'vendedor') continue;\n\n  // Garante que os valores são números\n  const col2 = parseInt(row.col_2 ?? 0);\n  const col3 = parseInt(row.col_3 ?? 0);\n  const col4 = parseInt(row.col_4 ?? 0);\n\n  const frase = `${nome} 11:00 quantidade de ${col2} ${col2 === 1 ? 'negociação' : 'negociações'}; ` +\n                `15:00 quantidade de ${col3} ${col3 === 1 ? 'negociação' : 'negociações'}; ` +\n                `17:30 quantidade de ${col4} ${col4 === 1 ? 'negociação' : 'negociações'}.`;\n\n  output += frase + '\\n';\n}\n\nreturn [\n  {\n    json: {\n      atividade: 'Negociação',\n      dados: output.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        -60
      ],
      "id": "d98aa10d-318c-4b49-9746-34b0a69d2b3d",
      "name": "Code2"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1060,
        140
      ],
      "id": "be77c9c3-7b08-41f1-9dd6-291f408480f2",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Função para extrair quantidade de uma frase como \"15:00 quantidade de 4 ligações\"\nfunction extrairQuantidade(texto) {\n  const match = texto.match(/quantidade de\\s*(\\d+)/);\n  return match ? parseInt(match[1]) : 0;\n}\n\n// Objeto final com os dados unificados\nconst consolidado = {};\n\n// Iterar sobre cada item (atividade)\nfor (const item of items) {\n  const atividade = item.json.atividade.toLowerCase();\n  const linhas = item.json.dados.split('\\n').slice(2); // ignora cabeçalhos\n\n  for (const linha of linhas) {\n    if (!linha.trim()) continue;\n\n    const partes = linha.split(/(?=\\d{1,2}:\\d{2}\\s+quantidade)/g);\n    const nome = partes[0].split(' ')[0];\n\n    if (!consolidado[nome]) {\n      consolidado[nome] = {\n        nome,\n        ligacoes: 0,\n        prospeccoes: 0,\n        negociacoes: 0\n      };\n    }\n\n    for (const parte of partes) {\n      const qtd = extrairQuantidade(parte);\n      if (atividade.includes(\"negociação\")) {\n        consolidado[nome].negociacoes += qtd;\n      } else if (atividade.includes(\"prospec\")) {\n        consolidado[nome].prospeccoes += qtd;\n      } else if (atividade.includes(\"ligação\") || atividade.includes(\"ligações\")) {\n        consolidado[nome].ligacoes += qtd;\n      }\n    }\n  }\n}\n\n// Retornar em um único item com todos os dados juntos\nreturn [\n  {\n    json: {\n      dados: Object.values(consolidado)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        100
      ],
      "id": "805622ed-4799-43bc-b14a-def20bd1fb72",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evo.leadscdt.com.br/message/sendText/Francisco",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=120363068420701463@g.us"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "neverError": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        -40
      ],
      "id": "529b6706-da2e-466d-84f4-8abe0a453b27",
      "name": "Karol",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ojPLr1ImI4RqyPlx",
          "name": "PatrocinioFrancisco"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.dados }}",
        "options": {
          "systemMessage": "Você irá receber a quantidade de ligação, prospecção e negociação. \nComo segue aqui:\nStefani: 5 Ligações, 2 prospecções e 5 negociações.  \nVictoria: 3 Ligações, 2 prospecções e 4 negociações.  \nHenrique: 3 Ligações, 2 prospecções e 3 negociações.  \nLudmila: 5 Ligações, 1 prospecção e 1 negociação.  \nSabrina: 8 prospecções. (Sem ligações ou negociações)  \n\nVocê fará um calculo de quantidade de vendas por dia de cada vendedor levando em consideração uma taxa de conversão de 10% da prospecções\nCrie apenas uma única mensagem como segue abaixo\nÉ para criar sempre de todos os vendedores e não apenas os 3 primeiros. \n\nExemplo: \n\n📣*Segue ranking de projeção de vendas mediante a suas atividades*🚀\n\n1°🥇 *Stefani*: Você hoje projetou 0,2 venda.\n2°🥈 *Victoria*: Você hoje projetou 0.2 vendas.\n3°🥉 *Henrique*: Você hoje projetou 0,2 vendas. \n4° *Ludmila*: Você hoje projetou 0,1 vendas. \n5° *Sabrina*: Você hoje projetou 0,8 vendas.\nE assim por diante...\n\n\nSe o vendedor projetou menos do que 1 venda, diga o nome dos vendedores e fale da importância de aumentar o volume de atividade para projetar no mínimo 2 vendas o dia.\n\nExemplo: Vicrotia, Henrique, Ludmila e Sabrina.  Hoje nosso volume de atividade não foi o suficiente para projetarmos mais de 1 venda, mas amanhã será um novo dia, onde vamos projetar mais de 1 vendas dia, então vamos verificar nossa rota e planejamento para que ao final do dia estejamos projetando no mínimo 1 venda o dia e siga com uma mensagem curta dizendo sempre o porque devemos ter volume de atividade em vendas, algo sobre persistência, consistência, motivação e objetivo. (sempre utilizar todos os nomes que não tiverem projetando acima de 1 venda) Utilize emojis porem poucos. \n\nMensagem de motivação para os que fizeram volume de atividade o suficiente para projetar mais de 1 venda.\n\nCrie sempre versões diferentes das mensagens de motivação e da mensagens dos vendedores que não projetaram acima de 1 venda e da menagem dos vendedores que projetaram mis de 1 venda.\n\nNão crie mensagens longas. \n\nE por ultimo crie o total de atividades mediantes aos resultados de todos os vendedores. \nTotal de volume da equipe: \nExemplo:\n\n📣🚀Fechamento de volume de atividades da equipe:\n21 Ligações,  15 prospecções e 13 negociações. \n\nE no final você irá calcular 10% da prospecção da equipe exemplo:\n\nHoje nossa equipe projetou o total de 1,5 vendas. \n\n\n\nSe a projeção da equipe for abaixo das 15 vendas diga que precisamos melhorar nossas ou nos esforçar mais para entregar um volume de atividades maior. O quanto é importante trabalharmos projetando sempre mais de 15 vendas por dia em equipe. Tudo isso em mensagens curtas e objetiva. No final das menagem não coloque nada como: Vamos juntos ou chamando para todos para algo. \n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1560,
        -40
      ],
      "id": "652cda73-ab35-4aee-87f4-9d9af0ff57a7",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1620,
        280
      ],
      "id": "e940be5e-cdb3-4b66-ac16-66c1a3f58d33",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "B9GolNdmVgPzDWz2",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Ligação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ligação": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prospecção": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          },
          {
            "node": "Prospecção",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Negociação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Negociação": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Karol",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c63cb9e7-5800-4e9b-ab02-dec85fc4e6e3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f763e8fdca77702870cf690f15089984a3c3202426ce948f8e26feb070a0b4a8"
  },
  "id": "f54H4RkyBOHAdAYo",
  "tags": []
}